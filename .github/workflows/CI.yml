name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-and-test-AuthenticationAPI:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
      
    - name: Restore dependencies AuthenticationAPI
      working-directory: Kwetter-Backend/AuthenticationAPI/
      run: dotnet restore
      
    - name: Build AuthenticationAPI
      working-directory: Kwetter-Backend/AuthenticationAPI/
      run: dotnet build --no-restore -warnaserror
      
  build-and-test-MessageAPI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
      
    - name: Restore dependencies MessageAPI
      working-directory: Kwetter-Backend/MessageAPI/
      run: dotnet restore
      
    - name: Build MessageAPI
      working-directory: Kwetter-Backend/MessageAPI/
      run: dotnet build --no-restore -warnaserror
    
  build-and-test-UsersAPI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
      
    - name: Restore dependencies UserProfileAPI
      working-directory: Kwetter-Backend/UserProfileAPI/
      run: dotnet restore
      
    - name: Build UserProfileAPI
      working-directory: Kwetter-Backend/UserProfileAPI/
      run: dotnet build --no-restore -warnaserror
  
  build-and-test-TweetAPI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
      
    - name: Restore dependencies TweetAPI
      working-directory: Kwetter-Backend/TweetAPI/
      run: dotnet restore
      
    - name: Build TweetAPI
      working-directory: Kwetter-Backend/TweetAPI/
      run: dotnet build --no-restore -warnaserror
      
  build-and-test-TimelineAPI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
      
    - name: Restore dependencies TimelineAPI
      working-directory: Kwetter-Backend/TimelineAPI/
      run: dotnet restore
      
    - name: Build TimelineAPI
      working-directory: Kwetter-Backend/TimelineAPI/
      run: dotnet build --no-restore -warnaserror

  sonarqube_analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'zulu' # Alternative distribution options are available.
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

     # Build and analyze Solution 1
    - name: Build and analyze Solution 1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"Kwetter-Backend/TweetAPI/TweetAPI.sln" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
